@using Warehouse.Models.Products
@model Warehouse.Models.Products.ProductViewModel


@{
    ViewBag.Title = ViewBag.PageTitle = "Add Product";
}

    <div class="fb-row">
        @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row cells12">
                <div class="cell colspan4">
                    @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "cell colspan2 label-control" })
                    <div class="input-control text cell colspan10">
                        @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="cell colspan4">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "cell colspan2 label-control" })
                    <div class="input-control text cell colspan10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "cell colspan2 label-control" })
                    <div class="input-control text cell colspan10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryId, "CountryId", htmlAttributes: new { @class = "cell colspan2 label-control" })
                    <div class="input-control text cell colspan10">
                        @Html.DropDownListFor(x => x.CountryId, ViewBag.CountryId as SelectList, "Select Country", new { @class = "select2" })
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    </div>
                    @Html.ActionLink("Create", "Create", "Country")
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductGroupId, "ProductGroupId", htmlAttributes: new { @class = "cell colspan2 label-control" })
                    <div class="input-control text cell colspan10">
                        @Html.DropDownListFor(x => x.ProductGroupId, ViewBag.ProductGroupId as SelectList, "Product Group", new { @class = "select2" })
                        @Html.ValidationMessageFor(model => model.ProductGroupId, "", new { @class = "text-danger" })
                    </div>
                    @Html.ActionLink("Create", "Create", "ProductGroup")
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="ImageFile">
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

        }
    </div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
